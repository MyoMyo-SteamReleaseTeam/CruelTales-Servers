/*
 * Generated File : Master_ZTest_InnerObjectTarget
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Numerics;
using System.Collections.Generic;
using CT.Common.Gameplay;
using CT.Common.DataType;
using CT.Common.DataType.Synchronizations;
using CT.Common.Serialization;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTS.Instance.Gameplay;
using CTS.Instance.Synchronizations;
using CTS.Instance.SyncObjects;

namespace CTS.Instance.SyncObjects
{
	[Serializable]
	public partial class ZTest_InnerObjectTarget : IMasterSynchronizable
	{
		[SyncVar]
		private int _v0;
		[SyncVar(SyncType.Unreliable)]
		private int _uv1;
		[SyncRpc(SyncType.ReliableTarget)]
		public partial void f1(NetworkPlayer player, NetStringShort a);
		private BitmaskByte _dirtyReliable_0 = new();
		private BitmaskByte _dirtyUnreliable_0 = new();
		public bool IsDirtyReliable
		{
			get
			{
				bool isDirty = false;
				isDirty |= _dirtyReliable_0.AnyTrue();
				return isDirty;
			}
		}
		public bool IsDirtyUnreliable
		{
			get
			{
				bool isDirty = false;
				isDirty |= _dirtyUnreliable_0.AnyTrue();
				return isDirty;
			}
		}
		public int V0
		{
			get => _v0;
			set
			{
				if (_v0 == value) return;
				_v0 = value;
				_dirtyReliable_0[0] = true;
			}
		}
		public partial void f1(NetworkPlayer player, NetStringShort a)
		{
			f1Callstack.Add(player, a);
			_dirtyReliable_0[1] = true;
		}
		private TargetCallstack<NetworkPlayer, NetStringShort> f1Callstack = new(8);
		public int Uv1
		{
			get => _uv1;
			set
			{
				if (_uv1 == value) return;
				_uv1 = value;
				_dirtyUnreliable_0[0] = true;
			}
		}
		public void ClearDirtyReliable()
		{
			_dirtyReliable_0.Clear();
			f1Callstack.Clear();
		}
		public void ClearDirtyUnreliable()
		{
			_dirtyUnreliable_0.Clear();
		}
		public void SerializeSyncReliable(NetworkPlayer player, IPacketWriter writer)
		{
			BitmaskByte dirtyReliable_0 = _dirtyReliable_0;
			int dirtyReliable_0_pos = writer.OffsetSize(sizeof(byte));
			if (_dirtyReliable_0[0])
			{
				writer.Put(_v0);
			}
			if (_dirtyReliable_0[1])
			{
				int f1Count = f1Callstack.GetCallCount(player);
				if (f1Count > 0)
				{
					var f1callList = f1Callstack.GetCallList(player);
					writer.Put((byte)f1Count);
					for (int i = 0; i < f1Count; i++)
					{
						var arg = f1callList[i];
						arg.Serialize(writer);
					}
				}
				else
				{
					dirtyReliable_0[1] = false;
				}
			}
			if (dirtyReliable_0.AnyTrue())
			{
				writer.PutTo(dirtyReliable_0, dirtyReliable_0_pos);
			}
			else
			{
				writer.SetSize(dirtyReliable_0_pos);
			}
		}
		public void SerializeSyncUnreliable(NetworkPlayer player, IPacketWriter writer)
		{
			_dirtyUnreliable_0.Serialize(writer);
			if (_dirtyUnreliable_0[0])
			{
				writer.Put(_uv1);
			}
		}
		public void SerializeEveryProperty(IPacketWriter writer)
		{
			writer.Put(_v0);
			writer.Put(_uv1);
		}
		public void InitializeMasterProperties()
		{
			_v0 = 0;
			_uv1 = 0;
		}
		public bool TryDeserializeSyncReliable(NetworkPlayer player, IPacketReader reader) => true;
		public bool TryDeserializeSyncUnreliable(NetworkPlayer player, IPacketReader reader) => true;
		public void InitializeRemoteProperties() { }
		public void IgnoreSyncReliable(IPacketReader reader) { }
		public static void IgnoreSyncStaticReliable(IPacketReader reader) { }
		public void IgnoreSyncUnreliable(IPacketReader reader) { }
		public static void IgnoreSyncStaticUnreliable(IPacketReader reader) { }
	}
}
#pragma warning restore CS0649
