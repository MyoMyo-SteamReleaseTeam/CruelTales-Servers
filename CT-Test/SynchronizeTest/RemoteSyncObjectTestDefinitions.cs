/*
 * Generated File : remote_TestNetworkObjectWith3Prop
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using CT.Common.DataType;
using CT.Common.Serialization;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTS.Instance.SyncObjects;

namespace CTC.Networks.SyncObjects.TestSyncObjects
{
	[Serializable]
	public partial class TestRemoteNetworkObject : RemoteNetworkObject
	{
		[SyncVar]
		private UserToken _userToken = new();
		public event Action<UserToken>? OnUserTokenChanged;
		[SyncVar]
		private int _intValue;
		public event Action<int>? OnIntValueChanged;
		[SyncRpc]
		public partial void Server_SendValue(float floatParam);
		[SyncRpc]
		public partial void Server_SendMessage(NetStringShort textParam);
		public override bool IsDirtyReliable => false;
		public override bool IsDirtyUnreliable => false;
		public override void ClearDirtyReliable() { }
		public override void ClearDirtyUnreliable() { }
		public override void SerializeSyncReliable(IPacketWriter writer) { }
		public override void SerializeSyncUnreliable(IPacketWriter writer) { }
		public override void SerializeEveryProperty(IPacketWriter writer) { }
		public override void DeserializeSyncReliable(IPacketReader reader)
		{
			BitmaskByte masterDirty = reader.ReadBitmaskByte();
			if (masterDirty[0])
			{
				BitmaskByte _dirtyReliable_0 = reader.ReadBitmaskByte();
				if (_dirtyReliable_0[0])
				{
					_userToken.Deserialize(reader);
					OnUserTokenChanged?.Invoke(_userToken);
				}
				if (_dirtyReliable_0[1])
				{
					_intValue = reader.ReadInt32();
					OnIntValueChanged?.Invoke(_intValue);
				}
				if (_dirtyReliable_0[2])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						float floatParam = reader.ReadSingle();
						Server_SendValue(floatParam);
					}
				}
				if (_dirtyReliable_0[3])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						NetStringShort textParam = new();
						textParam.Deserialize(reader);
						Server_SendMessage(textParam);
					}
				}
			}
		}
		public override void DeserializeSyncUnreliable(IPacketReader reader) { }
		public override void DeserializeEveryProperty(IPacketReader reader)
		{
			_userToken.Deserialize(reader);
			OnUserTokenChanged?.Invoke(_userToken);
			_intValue = reader.ReadInt32();
			OnIntValueChanged?.Invoke(_intValue);
		}
	}
}
#pragma warning restore CS0649
