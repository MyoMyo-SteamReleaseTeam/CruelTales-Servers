using System.Text;

namespace CT.CorePatcher
{
	public static class CodeFormat
	{
		public static string NewLine { get; set; } = TextFormat.LF;
		public static string Indent { get; set; } = TextFormat.Indent;

		/// <summary>입력된 문자열에 들여쓰기를 합니다.</summary>
		public static void AddIndent(ref string content, int repeat = 1)
		{
			for (int i = 0; i < repeat; i ++)
			{
				content = Indent + content.Replace(NewLine, $"{NewLine}{Indent}");
			}
		}

		public static void RemoveNewLine(ref string content, bool startFromNamespace)
		{
			StringBuilder sb = new();

			var contents = content.Split(NewLine);
			int startIndex = 0;

			if (startFromNamespace)
			{
				for (int i = 0; i < contents.Length; i ++)
				{
					string line = contents[i];
					if (line.Contains($"namespace"))
					{
						startIndex = i;
						break;
					}
					sb.AppendLine(line);
				}
			}

			for (int i = startIndex; i < contents.Length ; i ++)
			{
				string line = contents[i];
				if (string.IsNullOrWhiteSpace(line))
					continue;

				sb.Append(line + NewLine);
			}

			content = sb.ToString();
		}

		/// <summary>
		/// {0} Code file name
		/// {1} Content
		/// </summary>
		public static readonly string GeneratorMetadata =
@"/*
 * Generated File : {0}
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

{1}";
	}
}
