/*
 * Generated File : Remote_PlayerState
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Numerics;
using System.Collections.Generic;
using CT.Common;
using CT.Common.DataType;
using CT.Common.Exceptions;
using CT.Common.Gameplay;
using CT.Common.Quantization;
using CT.Common.Serialization;
using CT.Common.Synchronizations;
using CT.Common.Tools;
using CT.Common.DataType.Input;
using CT.Common.DataType.Primitives;
using CT.Common.DataType.Synchronizations;
using CT.Common.Gameplay.PlayerCharacterStates;
using CT.Common.Gameplay.Players;
using CT.Common.Tools.CodeGen;
using CT.Common.Tools.Collections;
using CT.Common.Tools.ConsoleHelper;
using CT.Common.Tools.Data;
using CT.Common.Tools.FSM;
using CT.Common.Tools.GetOpt;
using CT.Common.Tools.SharpJson;
using CTC.Networks.Synchronizations;

namespace CTC.Networks.SyncObjects.TestSyncObjects
{
	[Serializable]
	public partial class PlayerState : IRemoteSynchronizable
	{
		[SyncVar]
		private NetStringShort _username = new();
		public NetStringShort Username => _username;
		private Action<NetStringShort>? _onUsernameChanged;
		public event Action<NetStringShort> OnUsernameChanged
		{
			add => _onUsernameChanged += value;
			remove => _onUsernameChanged -= value;
		}
		[SyncObject]
		private readonly PlayerCostume _costume = new();
		public PlayerCostume Costume => _costume;
		private Action<PlayerCostume>? _onCostumeChanged;
		public event Action<PlayerCostume> OnCostumeChanged
		{
			add => _onCostumeChanged += value;
			remove => _onCostumeChanged -= value;
		}
		public PlayerState()
		{
		}
		public bool IsDirtyReliable => false;
		public bool IsDirtyUnreliable => false;
		public void ClearDirtyReliable() { }
		public void ClearDirtyUnreliable() { }
		public void SerializeSyncReliable(IPacketWriter writer) { }
		public void SerializeSyncUnreliable(IPacketWriter writer) { }
		public void InitializeMasterProperties() { }
		public bool TryDeserializeSyncReliable(IPacketReader reader)
		{
			BitmaskByte dirtyReliable_0 = reader.ReadBitmaskByte();
			if (dirtyReliable_0[0])
			{
				if (!_username.TryDeserialize(reader)) return false;
				_onUsernameChanged?.Invoke(_username);
			}
			if (dirtyReliable_0[1])
			{
				if (!_costume.TryDeserializeSyncReliable(reader)) return false;
				_onCostumeChanged?.Invoke(_costume);
			}
			return true;
		}
		public bool TryDeserializeSyncUnreliable(IPacketReader reader) => true;
		public bool TryDeserializeEveryProperty(IPacketReader reader)
		{
			if (!_username.TryDeserialize(reader)) return false;
			_onUsernameChanged?.Invoke(_username);
			if (!_costume.TryDeserializeEveryProperty(reader)) return false;
			_onCostumeChanged?.Invoke(_costume);
			return true;
		}
		public void InitializeRemoteProperties()
		{
			_username = new();
			_costume.InitializeRemoteProperties();
		}
		public void IgnoreSyncReliable(IPacketReader reader)
		{
			BitmaskByte dirtyReliable_0 = reader.ReadBitmaskByte();
			if (dirtyReliable_0[0])
			{
				NetStringShort.IgnoreStatic(reader);
			}
			if (dirtyReliable_0[1])
			{
				_costume.IgnoreSyncReliable(reader);
			}
		}
		public static void IgnoreSyncStaticReliable(IPacketReader reader)
		{
			BitmaskByte dirtyReliable_0 = reader.ReadBitmaskByte();
			if (dirtyReliable_0[0])
			{
				NetStringShort.IgnoreStatic(reader);
			}
			if (dirtyReliable_0[1])
			{
				PlayerCostume.IgnoreSyncStaticReliable(reader);
			}
		}
		public void IgnoreSyncUnreliable(IPacketReader reader) { }
		public static void IgnoreSyncStaticUnreliable(IPacketReader reader) { }
	}
}
#pragma warning restore CS0649
