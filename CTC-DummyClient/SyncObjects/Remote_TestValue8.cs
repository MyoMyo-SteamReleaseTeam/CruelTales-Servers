/*
 * Generated File : Remote_TestValue8
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Collections.Generic;
using CT.Common.DataType;
using CT.Common.Serialization;
using CT.Common.Serialization.Type;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTC.Networks.Synchronizations;

namespace CTC.Networks.SyncObjects.TestSyncObjects
{
	[Serializable]
	public partial class TestValue8 : RemoteNetworkObject
	{
		public override NetworkObjectType Type => NetworkObjectType.TestValue8;
		[SyncVar]
		private int _v0;
		public event Action<int>? OnV0Changed;
		[SyncVar]
		private int _v1;
		public event Action<int>? OnV1Changed;
		[SyncVar]
		private int _v2;
		public event Action<int>? OnV2Changed;
		[SyncVar]
		private int _v4;
		public event Action<int>? OnV4Changed;
		[SyncVar]
		private int _v5;
		public event Action<int>? OnV5Changed;
		[SyncVar]
		private int _v6;
		public event Action<int>? OnV6Changed;
		[SyncVar]
		private int _v7;
		public event Action<int>? OnV7Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv0;
		public event Action<int>? OnUv0Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv1;
		public event Action<int>? OnUv1Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv2;
		public event Action<int>? OnUv2Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv4;
		public event Action<int>? OnUv4Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv5;
		public event Action<int>? OnUv5Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv6;
		public event Action<int>? OnUv6Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv7;
		public event Action<int>? OnUv7Changed;
		[SyncRpc]
		public partial void f3(int a);
		[SyncRpc(SyncType.Unreliable)]
		public partial void uf3(int a);
		public override bool IsDirtyReliable => false;
		public override bool IsDirtyUnreliable => false;
		public override void ClearDirtyReliable() { }
		public override void ClearDirtyUnreliable() { }
		public override void SerializeSyncReliable(PacketWriter writer) { }
		public override void SerializeSyncUnreliable(PacketWriter writer) { }
		public override void SerializeEveryProperty(PacketWriter writer) { }
		public override void DeserializeSyncReliable(PacketReader reader)
		{
			BitmaskByte _dirtyReliable_0 = reader.ReadBitmaskByte();
			if (_dirtyReliable_0[0])
			{
				_v0 = reader.ReadInt32();
				OnV0Changed?.Invoke(_v0);
			}
			if (_dirtyReliable_0[1])
			{
				_v1 = reader.ReadInt32();
				OnV1Changed?.Invoke(_v1);
			}
			if (_dirtyReliable_0[2])
			{
				_v2 = reader.ReadInt32();
				OnV2Changed?.Invoke(_v2);
			}
			if (_dirtyReliable_0[3])
			{
				_v4 = reader.ReadInt32();
				OnV4Changed?.Invoke(_v4);
			}
			if (_dirtyReliable_0[4])
			{
				_v5 = reader.ReadInt32();
				OnV5Changed?.Invoke(_v5);
			}
			if (_dirtyReliable_0[5])
			{
				_v6 = reader.ReadInt32();
				OnV6Changed?.Invoke(_v6);
			}
			if (_dirtyReliable_0[6])
			{
				_v7 = reader.ReadInt32();
				OnV7Changed?.Invoke(_v7);
			}
			if (_dirtyReliable_0[7])
			{
				byte count = reader.ReadByte();
				for (int i = 0; i < count; i++)
				{
					int a = reader.ReadInt32();
					f3(a);
				}
			}
		}
		public override void DeserializeSyncUnreliable(PacketReader reader)
		{
			BitmaskByte _dirtyUnreliable_0 = reader.ReadBitmaskByte();
			if (_dirtyUnreliable_0[0])
			{
				_uv0 = reader.ReadInt32();
				OnUv0Changed?.Invoke(_uv0);
			}
			if (_dirtyUnreliable_0[1])
			{
				_uv1 = reader.ReadInt32();
				OnUv1Changed?.Invoke(_uv1);
			}
			if (_dirtyUnreliable_0[2])
			{
				_uv2 = reader.ReadInt32();
				OnUv2Changed?.Invoke(_uv2);
			}
			if (_dirtyUnreliable_0[3])
			{
				_uv4 = reader.ReadInt32();
				OnUv4Changed?.Invoke(_uv4);
			}
			if (_dirtyUnreliable_0[4])
			{
				_uv5 = reader.ReadInt32();
				OnUv5Changed?.Invoke(_uv5);
			}
			if (_dirtyUnreliable_0[5])
			{
				_uv6 = reader.ReadInt32();
				OnUv6Changed?.Invoke(_uv6);
			}
			if (_dirtyUnreliable_0[6])
			{
				_uv7 = reader.ReadInt32();
				OnUv7Changed?.Invoke(_uv7);
			}
			if (_dirtyUnreliable_0[7])
			{
				byte count = reader.ReadByte();
				for (int i = 0; i < count; i++)
				{
					int a = reader.ReadInt32();
					uf3(a);
				}
			}
		}
		public override void DeserializeEveryProperty(PacketReader reader)
		{
			_v0 = reader.ReadInt32();
			OnV0Changed?.Invoke(_v0);
			_v1 = reader.ReadInt32();
			OnV1Changed?.Invoke(_v1);
			_v2 = reader.ReadInt32();
			OnV2Changed?.Invoke(_v2);
			_v4 = reader.ReadInt32();
			OnV4Changed?.Invoke(_v4);
			_v5 = reader.ReadInt32();
			OnV5Changed?.Invoke(_v5);
			_v6 = reader.ReadInt32();
			OnV6Changed?.Invoke(_v6);
			_v7 = reader.ReadInt32();
			OnV7Changed?.Invoke(_v7);
			_uv0 = reader.ReadInt32();
			OnUv0Changed?.Invoke(_uv0);
			_uv1 = reader.ReadInt32();
			OnUv1Changed?.Invoke(_uv1);
			_uv2 = reader.ReadInt32();
			OnUv2Changed?.Invoke(_uv2);
			_uv4 = reader.ReadInt32();
			OnUv4Changed?.Invoke(_uv4);
			_uv5 = reader.ReadInt32();
			OnUv5Changed?.Invoke(_uv5);
			_uv6 = reader.ReadInt32();
			OnUv6Changed?.Invoke(_uv6);
			_uv7 = reader.ReadInt32();
			OnUv7Changed?.Invoke(_uv7);
		}
	}
}
#pragma warning restore CS0649
