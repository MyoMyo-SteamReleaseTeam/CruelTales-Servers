/*
 * Generated File : Remote_TestValue16
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Collections.Generic;
using CT.Common.DataType;
using CT.Common.Serialization;
using CT.Common.Serialization.Type;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTC.Networks.Synchronizations;

namespace CTC.Networks.SyncObjects.TestSyncObjects
{
	[Serializable]
	public partial class TestValue16 : RemoteNetworkObject
	{
		public override NetworkObjectType Type => NetworkObjectType.TestValue16;
		[SyncVar]
		private int _v0;
		public event Action<int>? OnV0Changed;
		[SyncVar]
		private int _v1;
		public event Action<int>? OnV1Changed;
		[SyncVar]
		private int _v2;
		public event Action<int>? OnV2Changed;
		[SyncVar]
		private int _v4;
		public event Action<int>? OnV4Changed;
		[SyncVar]
		private int _v5;
		public event Action<int>? OnV5Changed;
		[SyncVar]
		private int _v6;
		public event Action<int>? OnV6Changed;
		[SyncVar]
		private int _v7;
		public event Action<int>? OnV7Changed;
		[SyncVar]
		private int _v8;
		public event Action<int>? OnV8Changed;
		[SyncVar]
		private int _v9;
		public event Action<int>? OnV9Changed;
		[SyncVar]
		private int _v10;
		public event Action<int>? OnV10Changed;
		[SyncVar]
		private int _v12;
		public event Action<int>? OnV12Changed;
		[SyncVar]
		private int _v13;
		public event Action<int>? OnV13Changed;
		[SyncVar]
		private int _v15;
		public event Action<int>? OnV15Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv0;
		public event Action<int>? OnUv0Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv1;
		public event Action<int>? OnUv1Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv2;
		public event Action<int>? OnUv2Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv4;
		public event Action<int>? OnUv4Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv5;
		public event Action<int>? OnUv5Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv6;
		public event Action<int>? OnUv6Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv7;
		public event Action<int>? OnUv7Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv8;
		public event Action<int>? OnUv8Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv9;
		public event Action<int>? OnUv9Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv10;
		public event Action<int>? OnUv10Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv12;
		public event Action<int>? OnUv12Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv13;
		public event Action<int>? OnUv13Changed;
		[SyncVar(SyncType.Unreliable)]
		private int _uv15;
		public event Action<int>? OnUv15Changed;
		[SyncRpc]
		public partial void f3(int a);
		[SyncRpc]
		public partial void f14(int a);
		[SyncRpc(SyncType.Unreliable)]
		public partial void uf3(int a);
		[SyncRpc(SyncType.Unreliable)]
		public partial void uf14(int a);
		public override bool IsDirtyReliable => false;
		public override bool IsDirtyUnreliable => false;
		public override void ClearDirtyReliable() { }
		public override void ClearDirtyUnreliable() { }
		public override void SerializeSyncReliable(PacketWriter writer) { }
		public override void SerializeSyncUnreliable(PacketWriter writer) { }
		public override void SerializeEveryProperty(PacketWriter writer) { }
		public override void DeserializeSyncReliable(PacketReader reader)
		{
			BitmaskByte _dirtyReliable_0 = reader.ReadBitmaskByte();
			if (_dirtyReliable_0.AnyTrue())
			{
				if (_dirtyReliable_0[0])
				{
					_v0 = reader.ReadInt32();
					OnV0Changed?.Invoke(_v0);
				}
				if (_dirtyReliable_0[1])
				{
					_v1 = reader.ReadInt32();
					OnV1Changed?.Invoke(_v1);
				}
				if (_dirtyReliable_0[2])
				{
					_v2 = reader.ReadInt32();
					OnV2Changed?.Invoke(_v2);
				}
				if (_dirtyReliable_0[3])
				{
					_v4 = reader.ReadInt32();
					OnV4Changed?.Invoke(_v4);
				}
				if (_dirtyReliable_0[4])
				{
					_v5 = reader.ReadInt32();
					OnV5Changed?.Invoke(_v5);
				}
				if (_dirtyReliable_0[5])
				{
					_v6 = reader.ReadInt32();
					OnV6Changed?.Invoke(_v6);
				}
				if (_dirtyReliable_0[6])
				{
					_v7 = reader.ReadInt32();
					OnV7Changed?.Invoke(_v7);
				}
				if (_dirtyReliable_0[7])
				{
					_v8 = reader.ReadInt32();
					OnV8Changed?.Invoke(_v8);
				}
			}
			BitmaskByte _dirtyReliable_1 = reader.ReadBitmaskByte();
			if (_dirtyReliable_1.AnyTrue())
			{
				if (_dirtyReliable_1[0])
				{
					_v9 = reader.ReadInt32();
					OnV9Changed?.Invoke(_v9);
				}
				if (_dirtyReliable_1[1])
				{
					_v10 = reader.ReadInt32();
					OnV10Changed?.Invoke(_v10);
				}
				if (_dirtyReliable_1[2])
				{
					_v12 = reader.ReadInt32();
					OnV12Changed?.Invoke(_v12);
				}
				if (_dirtyReliable_1[3])
				{
					_v13 = reader.ReadInt32();
					OnV13Changed?.Invoke(_v13);
				}
				if (_dirtyReliable_1[4])
				{
					_v15 = reader.ReadInt32();
					OnV15Changed?.Invoke(_v15);
				}
				if (_dirtyReliable_1[5])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						int a = reader.ReadInt32();
						f3(a);
					}
				}
				if (_dirtyReliable_1[6])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						int a = reader.ReadInt32();
						f14(a);
					}
				}
			}
		}
		public override void DeserializeSyncUnreliable(PacketReader reader)
		{
			BitmaskByte _dirtyUnreliable_0 = reader.ReadBitmaskByte();
			if (_dirtyUnreliable_0.AnyTrue())
			{
				if (_dirtyUnreliable_0[0])
				{
					_uv0 = reader.ReadInt32();
					OnUv0Changed?.Invoke(_uv0);
				}
				if (_dirtyUnreliable_0[1])
				{
					_uv1 = reader.ReadInt32();
					OnUv1Changed?.Invoke(_uv1);
				}
				if (_dirtyUnreliable_0[2])
				{
					_uv2 = reader.ReadInt32();
					OnUv2Changed?.Invoke(_uv2);
				}
				if (_dirtyUnreliable_0[3])
				{
					_uv4 = reader.ReadInt32();
					OnUv4Changed?.Invoke(_uv4);
				}
				if (_dirtyUnreliable_0[4])
				{
					_uv5 = reader.ReadInt32();
					OnUv5Changed?.Invoke(_uv5);
				}
				if (_dirtyUnreliable_0[5])
				{
					_uv6 = reader.ReadInt32();
					OnUv6Changed?.Invoke(_uv6);
				}
				if (_dirtyUnreliable_0[6])
				{
					_uv7 = reader.ReadInt32();
					OnUv7Changed?.Invoke(_uv7);
				}
				if (_dirtyUnreliable_0[7])
				{
					_uv8 = reader.ReadInt32();
					OnUv8Changed?.Invoke(_uv8);
				}
			}
			BitmaskByte _dirtyUnreliable_1 = reader.ReadBitmaskByte();
			if (_dirtyUnreliable_1.AnyTrue())
			{
				if (_dirtyUnreliable_1[0])
				{
					_uv9 = reader.ReadInt32();
					OnUv9Changed?.Invoke(_uv9);
				}
				if (_dirtyUnreliable_1[1])
				{
					_uv10 = reader.ReadInt32();
					OnUv10Changed?.Invoke(_uv10);
				}
				if (_dirtyUnreliable_1[2])
				{
					_uv12 = reader.ReadInt32();
					OnUv12Changed?.Invoke(_uv12);
				}
				if (_dirtyUnreliable_1[3])
				{
					_uv13 = reader.ReadInt32();
					OnUv13Changed?.Invoke(_uv13);
				}
				if (_dirtyUnreliable_1[4])
				{
					_uv15 = reader.ReadInt32();
					OnUv15Changed?.Invoke(_uv15);
				}
				if (_dirtyUnreliable_1[5])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						int a = reader.ReadInt32();
						uf3(a);
					}
				}
				if (_dirtyUnreliable_1[6])
				{
					byte count = reader.ReadByte();
					for (int i = 0; i < count; i++)
					{
						int a = reader.ReadInt32();
						uf14(a);
					}
				}
			}
		}
		public override void DeserializeEveryProperty(PacketReader reader)
		{
			_v0 = reader.ReadInt32();
			OnV0Changed?.Invoke(_v0);
			_v1 = reader.ReadInt32();
			OnV1Changed?.Invoke(_v1);
			_v2 = reader.ReadInt32();
			OnV2Changed?.Invoke(_v2);
			_v4 = reader.ReadInt32();
			OnV4Changed?.Invoke(_v4);
			_v5 = reader.ReadInt32();
			OnV5Changed?.Invoke(_v5);
			_v6 = reader.ReadInt32();
			OnV6Changed?.Invoke(_v6);
			_v7 = reader.ReadInt32();
			OnV7Changed?.Invoke(_v7);
			_v8 = reader.ReadInt32();
			OnV8Changed?.Invoke(_v8);
			_v9 = reader.ReadInt32();
			OnV9Changed?.Invoke(_v9);
			_v10 = reader.ReadInt32();
			OnV10Changed?.Invoke(_v10);
			_v12 = reader.ReadInt32();
			OnV12Changed?.Invoke(_v12);
			_v13 = reader.ReadInt32();
			OnV13Changed?.Invoke(_v13);
			_v15 = reader.ReadInt32();
			OnV15Changed?.Invoke(_v15);
			_uv0 = reader.ReadInt32();
			OnUv0Changed?.Invoke(_uv0);
			_uv1 = reader.ReadInt32();
			OnUv1Changed?.Invoke(_uv1);
			_uv2 = reader.ReadInt32();
			OnUv2Changed?.Invoke(_uv2);
			_uv4 = reader.ReadInt32();
			OnUv4Changed?.Invoke(_uv4);
			_uv5 = reader.ReadInt32();
			OnUv5Changed?.Invoke(_uv5);
			_uv6 = reader.ReadInt32();
			OnUv6Changed?.Invoke(_uv6);
			_uv7 = reader.ReadInt32();
			OnUv7Changed?.Invoke(_uv7);
			_uv8 = reader.ReadInt32();
			OnUv8Changed?.Invoke(_uv8);
			_uv9 = reader.ReadInt32();
			OnUv9Changed?.Invoke(_uv9);
			_uv10 = reader.ReadInt32();
			OnUv10Changed?.Invoke(_uv10);
			_uv12 = reader.ReadInt32();
			OnUv12Changed?.Invoke(_uv12);
			_uv13 = reader.ReadInt32();
			OnUv13Changed?.Invoke(_uv13);
			_uv15 = reader.ReadInt32();
			OnUv15Changed?.Invoke(_uv15);
		}
	}
}
#pragma warning restore CS0649
