/*
 * Generated File : Master_TestValue8
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Collections.Generic;
using CT.Common.DataType;
using CT.Common.Serialization;
using CT.Common.Serialization.Type;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTS.Instance.Synchronizations;

namespace CTS.Instance.SyncObjects
{
	[Serializable]
	public partial class TestValue8 : MasterNetworkObject
	{
		public override NetworkObjectType Type => NetworkObjectType.TestValue8;
		[SyncVar]
		private int _v0;
		[SyncVar]
		private int _v1;
		[SyncVar]
		private int _v2;
		[SyncVar]
		private int _v4;
		[SyncVar]
		private int _v5;
		[SyncVar]
		private int _v6;
		[SyncVar]
		private int _v7;
		[SyncVar(SyncType.Unreliable)]
		private int _uv0;
		[SyncVar(SyncType.Unreliable)]
		private int _uv1;
		[SyncVar(SyncType.Unreliable)]
		private int _uv2;
		[SyncVar(SyncType.Unreliable)]
		private int _uv4;
		[SyncVar(SyncType.Unreliable)]
		private int _uv5;
		[SyncVar(SyncType.Unreliable)]
		private int _uv6;
		[SyncVar(SyncType.Unreliable)]
		private int _uv7;
		[SyncRpc]
		public partial void f3(int a);
		[SyncRpc(SyncType.Unreliable)]
		public partial void uf3(int a);
		private BitmaskByte _dirtyReliable_0 = new();
		private BitmaskByte _dirtyUnreliable_0 = new();
		public override bool IsDirtyReliable
		{
			get
			{
				bool isDirty = false;
				isDirty |= _dirtyReliable_0.AnyTrue();
				return isDirty;
			}
		}
		public override bool IsDirtyUnreliable
		{
			get
			{
				bool isDirty = false;
				isDirty |= _dirtyUnreliable_0.AnyTrue();
				return isDirty;
			}
		}
		public int V0
		{
			get => _v0;
			set
			{
				if (_v0 == value) return;
				_v0 = value;
				_dirtyReliable_0[0] = true;
			}
		}
		public int V1
		{
			get => _v1;
			set
			{
				if (_v1 == value) return;
				_v1 = value;
				_dirtyReliable_0[1] = true;
			}
		}
		public int V2
		{
			get => _v2;
			set
			{
				if (_v2 == value) return;
				_v2 = value;
				_dirtyReliable_0[2] = true;
			}
		}
		public int V4
		{
			get => _v4;
			set
			{
				if (_v4 == value) return;
				_v4 = value;
				_dirtyReliable_0[3] = true;
			}
		}
		public int V5
		{
			get => _v5;
			set
			{
				if (_v5 == value) return;
				_v5 = value;
				_dirtyReliable_0[4] = true;
			}
		}
		public int V6
		{
			get => _v6;
			set
			{
				if (_v6 == value) return;
				_v6 = value;
				_dirtyReliable_0[5] = true;
			}
		}
		public int V7
		{
			get => _v7;
			set
			{
				if (_v7 == value) return;
				_v7 = value;
				_dirtyReliable_0[6] = true;
			}
		}
		public partial void f3(int a)
		{
			f3Callstack.Enqueue(a);
			_dirtyReliable_0[7] = true;
		}
		private Queue<int> f3Callstack = new();
		public int Uv0
		{
			get => _uv0;
			set
			{
				if (_uv0 == value) return;
				_uv0 = value;
				_dirtyUnreliable_0[0] = true;
			}
		}
		public int Uv1
		{
			get => _uv1;
			set
			{
				if (_uv1 == value) return;
				_uv1 = value;
				_dirtyUnreliable_0[1] = true;
			}
		}
		public int Uv2
		{
			get => _uv2;
			set
			{
				if (_uv2 == value) return;
				_uv2 = value;
				_dirtyUnreliable_0[2] = true;
			}
		}
		public int Uv4
		{
			get => _uv4;
			set
			{
				if (_uv4 == value) return;
				_uv4 = value;
				_dirtyUnreliable_0[3] = true;
			}
		}
		public int Uv5
		{
			get => _uv5;
			set
			{
				if (_uv5 == value) return;
				_uv5 = value;
				_dirtyUnreliable_0[4] = true;
			}
		}
		public int Uv6
		{
			get => _uv6;
			set
			{
				if (_uv6 == value) return;
				_uv6 = value;
				_dirtyUnreliable_0[5] = true;
			}
		}
		public int Uv7
		{
			get => _uv7;
			set
			{
				if (_uv7 == value) return;
				_uv7 = value;
				_dirtyUnreliable_0[6] = true;
			}
		}
		public partial void uf3(int a)
		{
			uf3Callstack.Enqueue(a);
			_dirtyUnreliable_0[7] = true;
		}
		private Queue<int> uf3Callstack = new();
		public override void ClearDirtyReliable()
		{
			_dirtyReliable_0.Clear();
		}
		public override void ClearDirtyUnreliable()
		{
			_dirtyUnreliable_0.Clear();
		}
		public override void SerializeSyncReliable(PacketWriter writer)
		{
			_dirtyReliable_0.Serialize(writer);
			if (_dirtyReliable_0[0])
			{
				writer.Put(_v0);
			}
			if (_dirtyReliable_0[1])
			{
				writer.Put(_v1);
			}
			if (_dirtyReliable_0[2])
			{
				writer.Put(_v2);
			}
			if (_dirtyReliable_0[3])
			{
				writer.Put(_v4);
			}
			if (_dirtyReliable_0[4])
			{
				writer.Put(_v5);
			}
			if (_dirtyReliable_0[5])
			{
				writer.Put(_v6);
			}
			if (_dirtyReliable_0[6])
			{
				writer.Put(_v7);
			}
			if (_dirtyReliable_0[7])
			{
				byte count = (byte)f3Callstack.Count;
				writer.Put(count);
				for (int i = 0; i < count; i++)
				{
					var arg = f3Callstack.Dequeue();
					writer.Put(arg);
				}
			}
		}
		public override void SerializeSyncUnreliable(PacketWriter writer)
		{
			_dirtyUnreliable_0.Serialize(writer);
			if (_dirtyUnreliable_0[0])
			{
				writer.Put(_uv0);
			}
			if (_dirtyUnreliable_0[1])
			{
				writer.Put(_uv1);
			}
			if (_dirtyUnreliable_0[2])
			{
				writer.Put(_uv2);
			}
			if (_dirtyUnreliable_0[3])
			{
				writer.Put(_uv4);
			}
			if (_dirtyUnreliable_0[4])
			{
				writer.Put(_uv5);
			}
			if (_dirtyUnreliable_0[5])
			{
				writer.Put(_uv6);
			}
			if (_dirtyUnreliable_0[6])
			{
				writer.Put(_uv7);
			}
			if (_dirtyUnreliable_0[7])
			{
				byte count = (byte)uf3Callstack.Count;
				writer.Put(count);
				for (int i = 0; i < count; i++)
				{
					var arg = uf3Callstack.Dequeue();
					writer.Put(arg);
				}
			}
		}
		public override void SerializeEveryProperty(PacketWriter writer)
		{
			writer.Put(_v0);
			writer.Put(_v1);
			writer.Put(_v2);
			writer.Put(_v4);
			writer.Put(_v5);
			writer.Put(_v6);
			writer.Put(_v7);
			writer.Put(_uv0);
			writer.Put(_uv1);
			writer.Put(_uv2);
			writer.Put(_uv4);
			writer.Put(_uv5);
			writer.Put(_uv6);
			writer.Put(_uv7);
		}
		public override void DeserializeSyncReliable(PacketReader reader) { }
		public override void DeserializeSyncUnreliable(PacketReader reader) { }
		public override void DeserializeEveryProperty(PacketReader reader) { }
		public static void IgnoreSyncReliable(PacketReader reader) { }
		public static void IgnoreSyncUnreliable(PacketReader reader) { }
	}
}
#pragma warning restore CS0649
