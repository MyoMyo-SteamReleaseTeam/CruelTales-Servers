/*
 * Generated File : Master_EffectController
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Numerics;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using CT.Common;
using CT.Common.DataType;
using CT.Common.Exceptions;
using CT.Common.Gameplay;
using CT.Common.Quantization;
using CT.Common.Serialization;
using CT.Common.Synchronizations;
using CT.Common.Tools;
using CT.Common.DataType.Input;
using CT.Common.DataType.Primitives;
using CT.Common.DataType.Synchronizations;
using CT.Common.Gameplay.Infos;
using CT.Common.Gameplay.MiniGames;
using CT.Common.Gameplay.PlayerCharacterStates;
using CT.Common.Gameplay.Players;
using CT.Common.Tools.CodeGen;
using CT.Common.Tools.Collections;
using CT.Common.Tools.ConsoleHelper;
using CT.Common.Tools.Data;
using CT.Common.Tools.FSM;
using CT.Common.Tools.GetOpt;
using CT.Common.Tools.SharpJson;
using CTS.Instance.Gameplay;
using CTS.Instance.Synchronizations;
using CTS.Instance.SyncObjects;

namespace CTS.Instance.SyncObjects
{
	[Serializable]
	public partial class EffectController : IMasterSynchronizable
	{
		[SyncRpc]
		public partial void Play(EffectType effect, Vector2 position);
		[SyncRpc]
		public partial void Play3D(EffectType effect, Vector3 position);
		[AllowNull] public IDirtyable _owner;
		public void BindOwner(IDirtyable owner) => _owner = owner;
		public EffectController()
		{
		}
		public EffectController(IDirtyable owner)
		{
			_owner = owner;
		}
		private BitmaskByte _dirtyReliable_0 = new();
		protected bool _isDirtyReliable;
		public bool IsDirtyReliable => _isDirtyReliable;
		public void MarkDirtyReliable()
		{
			_isDirtyReliable = true;
			_owner.MarkDirtyReliable();
		}
		protected bool _isDirtyUnreliable;
		public bool IsDirtyUnreliable => _isDirtyUnreliable;
		public void MarkDirtyUnreliable()
		{
			_isDirtyUnreliable = true;
			_owner.MarkDirtyUnreliable();
		}
		public partial void Play(EffectType effect, Vector2 position)
		{
			PlayEVCallstack.Add((effect, position));
			_dirtyReliable_0[0] = true;
			MarkDirtyReliable();
		}
		private List<(EffectType effect, Vector2 position)> PlayEVCallstack = new(4);
		public partial void Play3D(EffectType effect, Vector3 position)
		{
			Play3DEVCallstack.Add((effect, position));
			_dirtyReliable_0[1] = true;
			MarkDirtyReliable();
		}
		private List<(EffectType effect, Vector3 position)> Play3DEVCallstack = new(4);
		public void ClearDirtyReliable()
		{
			_isDirtyReliable = false;
			_dirtyReliable_0.Clear();
			PlayEVCallstack.Clear();
			Play3DEVCallstack.Clear();
		}
		public void ClearDirtyUnreliable() { }
		public void SerializeSyncReliable(NetworkPlayer player, IPacketWriter writer)
		{
			_dirtyReliable_0.Serialize(writer);
			if (_dirtyReliable_0[0])
			{
				byte count = (byte)PlayEVCallstack.Count;
				writer.Put(count);
				for (int i = 0; i < count; i++)
				{
					var arg = PlayEVCallstack[i];
					writer.Put((int)arg.effect);
					writer.Put(arg.position);
				}
			}
			if (_dirtyReliable_0[1])
			{
				byte count = (byte)Play3DEVCallstack.Count;
				writer.Put(count);
				for (int i = 0; i < count; i++)
				{
					var arg = Play3DEVCallstack[i];
					writer.Put((int)arg.effect);
					writer.Put(arg.position);
				}
			}
		}
		public void SerializeSyncUnreliable(NetworkPlayer player, IPacketWriter writer) { }
		public void SerializeEveryProperty(IPacketWriter writer) { }
		public void InitializeMasterProperties() { }
		public bool TryDeserializeSyncReliable(NetworkPlayer player, IPacketReader reader) => true;
		public bool TryDeserializeSyncUnreliable(NetworkPlayer player, IPacketReader reader) => true;
		public void InitializeRemoteProperties() { }
		public void IgnoreSyncReliable(IPacketReader reader) { }
		public static void IgnoreSyncStaticReliable(IPacketReader reader) { }
		public void IgnoreSyncUnreliable(IPacketReader reader) { }
		public static void IgnoreSyncStaticUnreliable(IPacketReader reader) { }
	}
}
#pragma warning restore CS0649
