/*
 * Generated File : Master_TestFuntionObject
 * 
 * This code has been generated by the CodeGenerator.
 * Do not modify the code arbitrarily.
 */

#nullable enable
#pragma warning disable CS0649

using System;
using System.Collections.Generic;
using CT.Common.DataType;
using CT.Common.Serialization;
using CT.Common.Serialization.Type;
using CT.Common.Synchronizations;
using CT.Common.Tools.Collections;
using CTS.Instance.Synchronizations;

namespace CTS.Instance.SyncObjects
{
	[Serializable]
	public partial class TestFuntionObject : ISynchronizable
	{
		[SyncRpc]
		public partial void Server_VoidArg();
		[SyncRpc]
		public partial void Server_PrimitiveArg_1(float v0);
		[SyncRpc]
		public partial void Server_PrimitiveArg_2(float v0, int v1);
		[SyncRpc]
		public partial void Server_PrimitiveArg_3(float v0, int v1, double v2);
		[SyncRpc]
		public partial void Server_ValueTypeArg_1(NetVec2 v0);
		[SyncRpc]
		public partial void Server_ValueTypeArg_2(NetVec2 v0, NetString v1);
		[SyncRpc]
		public partial void Server_ValueTypeArg_3(UserId v0, NetVec2 v1, NetString v2);
		[SyncRpc]
		public partial void Server_EnumTypeArg_1(DisconnectReasonType v0, AckJoinMatch v1);
		[SyncRpc]
		public partial void Server_EnumTypeArg_2(AckJoinMatch v0, DisconnectReasonType v1);
		[SyncRpc]
		public partial void Server_EnumTypeArg_3(AckJoinMatch v0, DisconnectReasonType v1, AckJoinMatch v2);
		[SyncRpc]
		public partial void Server_CompositeArg_2_1(int v0, DisconnectReasonType v1);
		[SyncRpc]
		public partial void Server_CompositeArg_2_2(NetVec2 v0, DisconnectReasonType v1);
		[SyncRpc]
		public partial void Server_CompositeArg_3(NetVec2 v0, DisconnectReasonType v1, float v2);
		private BitmaskByte _dirtyReliable_0 = new();
		private BitmaskByte _dirtyReliable_1 = new();
		public bool IsDirtyReliable
		{
			get
			{
				bool isDirty = false;
				isDirty |= _dirtyReliable_0.AnyTrue();
				isDirty |= _dirtyReliable_1.AnyTrue();
				return isDirty;
			}
		}
		public bool IsDirtyUnreliable => false;
		public partial void Server_VoidArg()
		{
			Server_VoidArgCallstackCount++;
			_dirtyReliable_0[0] = true;
		}
		private byte Server_VoidArgCallstackCount = 0;
		public partial void Server_PrimitiveArg_1(float v0)
		{
			Server_PrimitiveArg_1Callstack.Enqueue(v0);
			_dirtyReliable_0[1] = true;
		}
		private Queue<float> Server_PrimitiveArg_1Callstack = new();
		public partial void Server_PrimitiveArg_2(float v0, int v1)
		{
			Server_PrimitiveArg_2Callstack.Enqueue((v0, v1));
			_dirtyReliable_0[2] = true;
		}
		private Queue<(float v0, int v1)> Server_PrimitiveArg_2Callstack = new();
		public partial void Server_PrimitiveArg_3(float v0, int v1, double v2)
		{
			Server_PrimitiveArg_3Callstack.Enqueue((v0, v1, v2));
			_dirtyReliable_0[3] = true;
		}
		private Queue<(float v0, int v1, double v2)> Server_PrimitiveArg_3Callstack = new();
		public partial void Server_ValueTypeArg_1(NetVec2 v0)
		{
			Server_ValueTypeArg_1Callstack.Enqueue(v0);
			_dirtyReliable_0[4] = true;
		}
		private Queue<NetVec2> Server_ValueTypeArg_1Callstack = new();
		public partial void Server_ValueTypeArg_2(NetVec2 v0, NetString v1)
		{
			Server_ValueTypeArg_2Callstack.Enqueue((v0, v1));
			_dirtyReliable_0[5] = true;
		}
		private Queue<(NetVec2 v0, NetString v1)> Server_ValueTypeArg_2Callstack = new();
		public partial void Server_ValueTypeArg_3(UserId v0, NetVec2 v1, NetString v2)
		{
			Server_ValueTypeArg_3Callstack.Enqueue((v0, v1, v2));
			_dirtyReliable_0[6] = true;
		}
		private Queue<(UserId v0, NetVec2 v1, NetString v2)> Server_ValueTypeArg_3Callstack = new();
		public partial void Server_EnumTypeArg_1(DisconnectReasonType v0, AckJoinMatch v1)
		{
			Server_EnumTypeArg_1Callstack.Enqueue((v0, v1));
			_dirtyReliable_0[7] = true;
		}
		private Queue<(DisconnectReasonType v0, AckJoinMatch v1)> Server_EnumTypeArg_1Callstack = new();
		public partial void Server_EnumTypeArg_2(AckJoinMatch v0, DisconnectReasonType v1)
		{
			Server_EnumTypeArg_2Callstack.Enqueue((v0, v1));
			_dirtyReliable_1[0] = true;
		}
		private Queue<(AckJoinMatch v0, DisconnectReasonType v1)> Server_EnumTypeArg_2Callstack = new();
		public partial void Server_EnumTypeArg_3(AckJoinMatch v0, DisconnectReasonType v1, AckJoinMatch v2)
		{
			Server_EnumTypeArg_3Callstack.Enqueue((v0, v1, v2));
			_dirtyReliable_1[1] = true;
		}
		private Queue<(AckJoinMatch v0, DisconnectReasonType v1, AckJoinMatch v2)> Server_EnumTypeArg_3Callstack = new();
		public partial void Server_CompositeArg_2_1(int v0, DisconnectReasonType v1)
		{
			Server_CompositeArg_2_1Callstack.Enqueue((v0, v1));
			_dirtyReliable_1[2] = true;
		}
		private Queue<(int v0, DisconnectReasonType v1)> Server_CompositeArg_2_1Callstack = new();
		public partial void Server_CompositeArg_2_2(NetVec2 v0, DisconnectReasonType v1)
		{
			Server_CompositeArg_2_2Callstack.Enqueue((v0, v1));
			_dirtyReliable_1[3] = true;
		}
		private Queue<(NetVec2 v0, DisconnectReasonType v1)> Server_CompositeArg_2_2Callstack = new();
		public partial void Server_CompositeArg_3(NetVec2 v0, DisconnectReasonType v1, float v2)
		{
			Server_CompositeArg_3Callstack.Enqueue((v0, v1, v2));
			_dirtyReliable_1[4] = true;
		}
		private Queue<(NetVec2 v0, DisconnectReasonType v1, float v2)> Server_CompositeArg_3Callstack = new();
		public void ClearDirtyReliable()
		{
			_dirtyReliable_0.Clear();
			_dirtyReliable_1.Clear();
		}
		public void ClearDirtyUnreliable() { }
		public void SerializeSyncReliable(PacketWriter writer)
		{
			_dirtyReliable_0.Serialize(writer);
			if (_dirtyReliable_0.AnyTrue())
			{
				if (_dirtyReliable_0[0])
				{
					writer.Put((byte)Server_VoidArgCallstackCount);
				}
				if (_dirtyReliable_0[1])
				{
					byte count = (byte)Server_PrimitiveArg_1Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_PrimitiveArg_1Callstack.Dequeue();
						writer.Put(arg);
					}
				}
				if (_dirtyReliable_0[2])
				{
					byte count = (byte)Server_PrimitiveArg_2Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_PrimitiveArg_2Callstack.Dequeue();
						writer.Put(arg.v0);
						writer.Put(arg.v1);
					}
				}
				if (_dirtyReliable_0[3])
				{
					byte count = (byte)Server_PrimitiveArg_3Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_PrimitiveArg_3Callstack.Dequeue();
						writer.Put(arg.v0);
						writer.Put(arg.v1);
						writer.Put(arg.v2);
					}
				}
				if (_dirtyReliable_0[4])
				{
					byte count = (byte)Server_ValueTypeArg_1Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_ValueTypeArg_1Callstack.Dequeue();
						arg.Serialize(writer);
					}
				}
				if (_dirtyReliable_0[5])
				{
					byte count = (byte)Server_ValueTypeArg_2Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_ValueTypeArg_2Callstack.Dequeue();
						arg.v0.Serialize(writer);
						arg.v1.Serialize(writer);
					}
				}
				if (_dirtyReliable_0[6])
				{
					byte count = (byte)Server_ValueTypeArg_3Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_ValueTypeArg_3Callstack.Dequeue();
						arg.v0.Serialize(writer);
						arg.v1.Serialize(writer);
						arg.v2.Serialize(writer);
					}
				}
				if (_dirtyReliable_0[7])
				{
					byte count = (byte)Server_EnumTypeArg_1Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_EnumTypeArg_1Callstack.Dequeue();
						writer.Put((byte)arg.v0);
						writer.Put((byte)arg.v1);
					}
				}
			}
			_dirtyReliable_1.Serialize(writer);
			if (_dirtyReliable_1.AnyTrue())
			{
				if (_dirtyReliable_1[0])
				{
					byte count = (byte)Server_EnumTypeArg_2Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_EnumTypeArg_2Callstack.Dequeue();
						writer.Put((byte)arg.v0);
						writer.Put((byte)arg.v1);
					}
				}
				if (_dirtyReliable_1[1])
				{
					byte count = (byte)Server_EnumTypeArg_3Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_EnumTypeArg_3Callstack.Dequeue();
						writer.Put((byte)arg.v0);
						writer.Put((byte)arg.v1);
						writer.Put((byte)arg.v2);
					}
				}
				if (_dirtyReliable_1[2])
				{
					byte count = (byte)Server_CompositeArg_2_1Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_CompositeArg_2_1Callstack.Dequeue();
						writer.Put(arg.v0);
						writer.Put((byte)arg.v1);
					}
				}
				if (_dirtyReliable_1[3])
				{
					byte count = (byte)Server_CompositeArg_2_2Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_CompositeArg_2_2Callstack.Dequeue();
						arg.v0.Serialize(writer);
						writer.Put((byte)arg.v1);
					}
				}
				if (_dirtyReliable_1[4])
				{
					byte count = (byte)Server_CompositeArg_3Callstack.Count;
					writer.Put(count);
					for (int i = 0; i < count; i++)
					{
						var arg = Server_CompositeArg_3Callstack.Dequeue();
						arg.v0.Serialize(writer);
						writer.Put((byte)arg.v1);
						writer.Put(arg.v2);
					}
				}
			}
		}
		public void SerializeSyncUnreliable(PacketWriter writer) { }
		public void SerializeEveryProperty(PacketWriter writer) { }
		public void DeserializeSyncReliable(PacketReader reader) { }
		public void DeserializeSyncUnreliable(PacketReader reader) { }
		public void IgnoreSyncReliable(PacketReader reader) { }
		public void IgnoreSyncUnreliable(PacketReader reader) { }
		public void DeserializeEveryProperty(PacketReader reader) { }
	}
}
#pragma warning restore CS0649
